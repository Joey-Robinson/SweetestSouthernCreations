@mixin imageGalleryImages {
  transition: all .3s ease-in-out;
  &:hover {
    transform: scale(1.5);
    @include respond(tabLand) {
      transform: scale(1.35);
    }
  }
}

@mixin accordionLayout {
  cursor: auto;
  text-align: center;
  border: 1px solid black;
  outline: black;
  @include respond(customSmall) {
    font-size: 1.4rem;
    width: 100%;
    padding: 1rem;
  }
}

@mixin aboutLayout {
  width: 20rem;
  height: 20rem;
  border-radius: 50%;
  background-image: linear-gradient(to left top, $lightSilver, darken($brightPink, 30%));
  border: $blackBorder;
  box-shadow: $midnightShadow;
  transition: all .4s ease-in-out;
  text-align: center;
  & h1 {
    font-size: 2rem;
    margin-top: 2.5rem;
  }
  @include respond(customSmall) {
    border-radius: 0;
  }
  @include respond(tabLand) {
    border-radius: 0;
    width: 20rem;
    height: 20rem;
    padding: 0;
  }
  & p {
    font-size: 0.001px;
  }
  &:hover {
    font-size: 2rem;
    width: 70rem;
    height: 35rem;
    border-radius: 2.5rem;
    @include respond(tabLand) {
      width: 40rem;
      height: 35rem;
    }
    & h1 {
      // display: none;
      color: transparent;
    }
    & p {
      transition-delay: .375s;
      padding: 1rem;
      margin-top: 5rem;
      font-size: 1.8rem;
      font-weight: bold;
      color: $white;
      @include respond(tabPort) {
        font-size: 1.1rem;
        letter-spacing: .1rem;
        font-weight: normal;
      }
    }
  }
}

@mixin aboutLayoutBottom {
  font-size: 1rem;
  width: 20rem;
  height: 20rem;
  border-radius: 50%;
  background-image: linear-gradient(to right bottom, $lightBlue, darken($mediumPurple, 30%));
  border: $blackBorder;
  box-shadow: $midnightShadow;
  transition: all .4s ease-in-out;
  & h1 {
    font-size: 2rem;
    margin-top: 2.5rem;
  }
  @include respond(customSmall) {
    border-radius: 0;
  }
  @include respond(tabLand) {
    border-radius: 0;
    width: 20rem;
    height: 20rem;
    padding: 0;
  }
  & p {
    font-size: 0.001px;
  }
  &:hover {
    font-size: 2rem;
    width: 70rem;
    height: 35rem;
    border-radius: 2.5rem;
    transform: translateY(-10rem);
    @include respond(tabLand) {
      width: 40rem;
      height: 35rem;
    }
    @include respond(tabLand) {
      h1 {
        display: none;
      }
    }
    & p {
      transition-delay: .375s;
      margin-top: 5rem;
      font-size: 1.65rem;
      font-weight: bold;
      color: $white;
      padding: 1rem;
      @include respond(tabPort) {
        font-size: 1.3rem;
        letter-spacing: .1rem;
        font-weight: normal;
      }
    }
  }
}

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width:  37.5em) { // 600px
      @content
    };
  }
  @if $breakpoint == customSmall {
    @media only screen and (max-width: 50em) { // 800px
      @content
    };
  }
  @if $breakpoint == ultraSpecific {
    @media only screen and (min-width: 53.125em) { // 850px
      @content
    };
  }
  @if $breakpoint == tabPort {
    @media only screen and (max-width:  56.25em) { // 900px
      @content
    };
  }
  @if $breakpoint == customMedium {
    @media only screen and (max-width: 62.5em) { // 1000px
      @content
    };
  }
  @if $breakpoint == tabLand {
    @media only screen and (max-width:  75em) { // 1200px
      @content
    };
  }
  @if $breakpoint == bigDesktop {
    @media only screen and (max-width:  112.5em) { // 1800px
      @content
    };
  }
}

@include respond(customSmall) {

}

@include respond(tabPort) {

}

@include respond(customMedium) {

}

@include respond(tabLand) {

}

@include respond(bigDesktop) {

}